From 9114450d4f82d623f18279659992de18df438afd Mon Sep 17 00:00:00 2001
From: "Kramer, George T" <george.t.kramer@intel.com>
Date: Wed, 30 Nov 2016 18:37:00 -0800
Subject: [PATCH 1/3] Bring 0.4.0 tag to sstephenson/master

---
 CONDUCT.md                            | 78 +++++++++++++++++++++++++++++++++++
 libexec/bats-exec-test                |  4 +-
 package.json                          |  5 +--
 test/bats.bats                        | 12 ++++--
 test/fixtures/bats/loop_keep_IFS.bats | 16 +++++++
 test/suite.bats                       | 16 +++----
 6 files changed, 116 insertions(+), 15 deletions(-)
 create mode 100644 CONDUCT.md
 create mode 100644 test/fixtures/bats/loop_keep_IFS.bats

diff --git a/CONDUCT.md b/CONDUCT.md
new file mode 100644
index 0000000..43c3dcb
--- /dev/null
+++ b/CONDUCT.md
@@ -0,0 +1,78 @@
+# Contributor Covenant Code of Conduct
+
+## Our Pledge
+
+In the interest of fostering an open and welcoming environment, we as
+contributors and maintainers pledge to making participation in our project and
+our community a harassment-free experience for everyone, regardless of age, body
+size, disability, ethnicity, gender identity and expression, level of experience,
+nationality, personal appearance, race, religion, or sexual identity and
+orientation.
+
+## Our Standards
+
+Examples of behavior that contributes to creating a positive environment
+include:
+
+* Using welcoming and inclusive language
+* Being respectful of differing viewpoints and experiences
+* Gracefully accepting constructive criticism
+* Focusing on what is best for the community
+* Showing empathy towards other community members
+
+Examples of unacceptable behavior by participants include:
+
+* The use of sexualized language or imagery and unwelcome sexual attention or
+advances
+* Trolling, insulting/derogatory comments, and personal or political attacks
+* Public or private harassment
+* Publishing others' private information, such as a physical or electronic
+  address, without explicit permission
+* Other conduct which could reasonably be considered inappropriate in a
+  professional setting
+
+## Our Responsibilities
+
+Project maintainers are responsible for clarifying the standards of acceptable
+behavior and are expected to take appropriate and fair corrective action in
+response to any instances of unacceptable behavior.
+
+Project maintainers have the right and responsibility to remove, edit, or
+reject comments, commits, code, wiki edits, issues, and other contributions
+that are not aligned to this Code of Conduct, or to ban temporarily or
+permanently any contributor for other behaviors that they deem inappropriate,
+threatening, offensive, or harmful.
+
+## Scope
+
+This Code of Conduct applies both within project spaces and in public spaces
+when an individual is representing the project or its community. Examples of
+representing a project or community include using an official project e-mail
+address, posting via an official social media account, or acting as an appointed
+representative at an online or offline event. Representation of a project may be
+further defined and clarified by project maintainers.
+
+## Enforcement
+
+Instances of abusive, harassing, or otherwise unacceptable behavior may be
+reported by contacting one of the project maintainers listed below. All
+complaints will be reviewed and investigated and will result in a response that
+is deemed necessary and appropriate to the circumstances. The project team is
+obligated to maintain confidentiality with regard to the reporter of an incident.
+Further details of specific enforcement policies may be posted separately.
+
+Project maintainers who do not follow or enforce the Code of Conduct in good
+faith may face temporary or permanent repercussions as determined by other
+members of the project's leadership.
+
+## Project Maintainers
+
+* Sam Stephenson <<sstephenson@gmail.com>>
+
+## Attribution
+
+This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,
+available at [http://contributor-covenant.org/version/1/4][version]
+
+[homepage]: http://contributor-covenant.org
+[version]: http://contributor-covenant.org/version/1/4/
diff --git a/libexec/bats-exec-test b/libexec/bats-exec-test
index 5a07665..8f3bd51 100755
--- a/libexec/bats-exec-test
+++ b/libexec/bats-exec-test
@@ -48,7 +48,7 @@ load() {
 }
 
 run() {
-  local e E T
+  local e E T oldIFS
   [[ ! "$-" =~ e ]] || e=1
   [[ ! "$-" =~ E ]] || E=1
   [[ ! "$-" =~ T ]] || T=1
@@ -57,10 +57,12 @@ run() {
   set +T
   output="$("$@" 2>&1)"
   status="$?"
+  oldIFS=$IFS
   IFS=$'\n' lines=($output)
   [ -z "$e" ] || set -e
   [ -z "$E" ] || set -E
   [ -z "$T" ] || set -T
+  IFS=$oldIFS
 }
 
 setup() {
diff --git a/package.json b/package.json
index 2183feb..6bcff0c 100644
--- a/package.json
+++ b/package.json
@@ -1,9 +1,8 @@
 {
   "name": "bats",
-  "version": "0.3.1",
+  "version": "v0.4.0",
   "description": "Bash Automated Testing System",
-  "global": "true",
-  "install": "./install.sh /usr/local",
+  "install": "./install.sh ${PREFIX:-/usr/local}",
   "scripts": [ "libexec/bats", "libexec/bats-exec-suite", "libexec/bats-exec-test", "libexec/bats-format-tap-stream", "libexec/bats-preprocess", "bin/bats" ]
 }
 
diff --git a/test/bats.bats b/test/bats.bats
index 280515d..f1aff29 100755
--- a/test/bats.bats
+++ b/test/bats.bats
@@ -30,14 +30,14 @@ fixtures bats
 @test "empty test file runs zero tests" {
   run bats "$FIXTURE_ROOT/empty.bats"
   [ $status -eq 0 ]
-  [ $output = "1..0" ]
+  [ "$output" = "1..0" ]
 }
 
 @test "one passing test" {
   run bats "$FIXTURE_ROOT/passing.bats"
   [ $status -eq 0 ]
-  [ ${lines[0]} = "1..1" ]
-  [ ${lines[1]} = "ok 1 a passing test" ]
+  [ "${lines[0]}" = "1..1" ]
+  [ "${lines[1]}" = "ok 1 a passing test" ]
 }
 
 @test "summary passing tests" {
@@ -256,3 +256,9 @@ fixtures bats
   [ "${lines[5]}" =  "# (in test file $RELATIVE_FIXTURE_ROOT/single_line.bats, line 9)" ]
   [ "${lines[6]}" = $'#   `@test "failing" { false; }\' failed' ]
 }
+
+@test "testing IFS not modified by run" {
+  run bats "$FIXTURE_ROOT/loop_keep_IFS.bats"
+  [ $status -eq 0 ]
+  [ "${lines[1]}" = "ok 1 loop_func" ]
+}
diff --git a/test/fixtures/bats/loop_keep_IFS.bats b/test/fixtures/bats/loop_keep_IFS.bats
new file mode 100644
index 0000000..f30613a
--- /dev/null
+++ b/test/fixtures/bats/loop_keep_IFS.bats
@@ -0,0 +1,16 @@
+# see issue #89
+loop_func() {
+  local search="none one two tree"
+  local d
+
+  for d in $search ; do
+    echo $d
+  done
+}
+
+@test "loop_func" {
+  run loop_func
+  [[ "${lines[3]}" == 'tree' ]]
+  run loop_func
+  [[ "${lines[2]}" == 'two' ]]
+}
diff --git a/test/suite.bats b/test/suite.bats
index 14f5008..5371686 100755
--- a/test/suite.bats
+++ b/test/suite.bats
@@ -6,30 +6,30 @@ fixtures suite
 @test "running a suite with no test files" {
   run bats "$FIXTURE_ROOT/empty"
   [ $status -eq 0 ]
-  [ $output = "1..0" ]
+  [ "$output" = "1..0" ]
 }
 
 @test "running a suite with one test file" {
   run bats "$FIXTURE_ROOT/single"
   [ $status -eq 0 ]
-  [ ${lines[0]} = "1..1" ]
-  [ ${lines[1]} = "ok 1 a passing test" ]
+  [ "${lines[0]}" = "1..1" ]
+  [ "${lines[1]}" = "ok 1 a passing test" ]
 }
 
 @test "counting tests in a suite" {
   run bats -c "$FIXTURE_ROOT/single"
   [ $status -eq 0 ]
-  [ $output -eq 1 ]
+  [ "$output" -eq 1 ]
 
   run bats -c "$FIXTURE_ROOT/multiple"
   [ $status -eq 0 ]
-  [ $output -eq 3 ]
+  [ "$output" -eq 3 ]
 }
 
 @test "aggregated output of multiple tests in a suite" {
   run bats "$FIXTURE_ROOT/multiple"
   [ $status -eq 0 ]
-  [ ${lines[0]} = "1..3" ]
+  [ "${lines[0]}" = "1..3" ]
   echo "$output" | grep "^ok . truth"
   echo "$output" | grep "^ok . more truth"
   echo "$output" | grep "^ok . quasi-truth"
@@ -38,14 +38,14 @@ fixtures suite
 @test "a failing test in a suite results in an error exit code" {
   FLUNK=1 run bats "$FIXTURE_ROOT/multiple"
   [ $status -eq 1 ]
-  [ ${lines[0]} = "1..3" ]
+  [ "${lines[0]}" = "1..3" ]
   echo "$output" | grep "^not ok . quasi-truth"
 }
 
 @test "running an ad-hoc suite by specifying multiple test files" {
   run bats "$FIXTURE_ROOT/multiple/a.bats" "$FIXTURE_ROOT/multiple/b.bats"
   [ $status -eq 0 ]
-  [ ${lines[0]} = "1..3" ]
+  [ "${lines[0]}" = "1..3" ]
   echo "$output" | grep "^ok . truth"
   echo "$output" | grep "^ok . more truth"
   echo "$output" | grep "^ok . quasi-truth"
-- 
2.10.2

